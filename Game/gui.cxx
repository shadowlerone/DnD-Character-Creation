// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "gui.h"

Fl_Double_Window* game_window = (Fl_Double_Window*)0;

Fl_Output* hp_input = (Fl_Output*)0;

Fl_Output* str_input = (Fl_Output*)0;

Fl_Output* dex_input = (Fl_Output*)0;

Fl_Output* con_input = (Fl_Output*)0;

Fl_Output* int_input = (Fl_Output*)0;

Fl_Output* wis_input = (Fl_Output*)0;

Fl_Output* cha_input = (Fl_Output*)0;

Fl_Output* ac_input = (Fl_Output*)0;

Fl_Browser* ItemInventory = (Fl_Browser*)0;

Fl_Group* map_group = (Fl_Group*)0;

Fl_Group* enemies_group = (Fl_Group*)0;

Fl_Browser* turn_order = (Fl_Browser*)0;

Fl_Double_Window* make_window() {
	{ game_window = new Fl_Double_Window(1920, 1008, "Game");
	game_window->align(Fl_Align(FL_ALIGN_CLIP | FL_ALIGN_INSIDE));
	{ Fl_Group* o = new Fl_Group(25, 25, 15, 15);
	{ Fl_Group* o = new Fl_Group(5, 55, 288, 881, "Player");
	o->box(FL_THIN_DOWN_BOX);
	o->color((Fl_Color)19);
	{ Fl_Group* o = new Fl_Group(5, 75, 288, 206, "Stats");
	{ hp_input = new Fl_Output(65, 81, 50, 50, "HP");
	hp_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* hp_input
	{ str_input = new Fl_Output(65, 131, 50, 50, "STR");
	str_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* str_input
	{ dex_input = new Fl_Output(165, 131, 50, 50, "DEX");
	dex_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* dex_input
	{ con_input = new Fl_Output(65, 181, 50, 50, "CON");
	con_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* con_input
	{ int_input = new Fl_Output(165, 181, 50, 50, "INT");
	int_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* int_input
	{ wis_input = new Fl_Output(65, 231, 50, 50, "WIS");
	wis_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* wis_input
	{ cha_input = new Fl_Output(165, 231, 50, 50, "CHA");
	cha_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* cha_input
	{ ac_input = new Fl_Output(165, 81, 50, 50, "AC");
	ac_input->box(FL_ENGRAVED_FRAME);
	} // Fl_Output* ac_input
	o->end();
	} // Fl_Group* o
	{ ItemInventory = new Fl_Browser(15, 320, 200, 600, "Inventory");
	ItemInventory->box(FL_DOWN_BOX);
	ItemInventory->labelfont(1);
	ItemInventory->align(Fl_Align(FL_ALIGN_TOP));
	} // Fl_Browser* ItemInventory
	o->end();
	} // Fl_Group* o
	{ map_group = new Fl_Group(293, 5, 1344, 1026, "Map");
	map_group->end();
	} // Fl_Group* map_group
	{ enemies_group = new Fl_Group(1637, 5, 288, 1030, "Enemies");
	enemies_group->box(FL_GTK_THIN_UP_BOX);
	enemies_group->color((Fl_Color)22);
	{ turn_order = new Fl_Browser(1660, 604, 231, 300, "Turn Order");
	turn_order->labelfont(1);
	turn_order->align(Fl_Align(FL_ALIGN_TOP));
	} // Fl_Browser* turn_order
	enemies_group->end();
	} // Fl_Group* enemies_group
	o->end();
	} // Fl_Group* o
	game_window->end();
	} // Fl_Double_Window* game_window
	return game_window;
}

Fl_Double_Window* dice_window = (Fl_Double_Window*)0;

Fl_Return_Button* dice_button = (Fl_Return_Button*)0;

static void cb_dice_button(Fl_Return_Button*, void*) {
	GameView::animate_dice_roll();
}

Fl_Box* dice_value_output = (Fl_Box*)0;

Fl_Double_Window* roll_dice() {
	{ dice_window = new Fl_Double_Window(400, 400, "Rolling");
	dice_window->box(FL_BORDER_BOX);
	dice_window->align(Fl_Align(FL_ALIGN_CLIP | FL_ALIGN_INSIDE));
	dice_window->hotspot(dice_window);
	{ dice_button = new Fl_Return_Button(100, 325, 200, 50, "Roll!");
	dice_button->down_box(FL_DOWN_BOX);
	dice_button->labelfont(1);
	dice_button->labelsize(36);
	dice_button->callback((Fl_Callback*)cb_dice_button);
	} // Fl_Return_Button* dice_button
	{ dice_value_output = new Fl_Box(100, 100, 200, 200, "Roll!");
	dice_value_output->box(FL_DIAMOND_UP_BOX);
	dice_value_output->color((Fl_Color)5);
	dice_value_output->labelfont(1);
	dice_value_output->labelsize(36);
	} // Fl_Box* dice_value_output
	dice_window->set_modal();
	dice_window->clear_border();
	dice_window->end();
	} // Fl_Double_Window* dice_window
	return dice_window;
}

void combat(Character::Character* c1, Character::Character* c2) {
	printf("Hello, World!\n");
}
